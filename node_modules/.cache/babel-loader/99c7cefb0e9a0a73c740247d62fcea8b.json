{"ast":null,"code":"// eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction useId(page) {\n  const [id, setId] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const path = location.pathname.split('/');\n\n    if (path.length === 3) {\n      setId(path[path.length - 1]);\n    } else if (path.length > 3) {\n      const idIndex = path.findIndex(path => path === page) + 1;\n      setId(path[idIndex]);\n    } else {\n      setId('');\n    }\n  }, [location, page]);\n  return id;\n}\n\nexport default useId;","map":{"version":3,"sources":["E:/React/SP/spotify-clone-client/src/utilities/hooks/useId.js"],"names":["React","useState","useEffect","useLocation","useId","page","id","setId","location","path","pathname","split","length","idIndex","findIndex"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACjB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAMO,QAAQ,GAAGL,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAb;;AAEA,QAAIF,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAsB;AAClBL,MAAAA,KAAK,CAACE,IAAI,CAACA,IAAI,CAACG,MAAL,GAAY,CAAb,CAAL,CAAL;AACH,KAFD,MAEM,IAAIH,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAoB;AACtB,YAAMC,OAAO,GAAGJ,IAAI,CAACK,SAAL,CAAeL,IAAI,IAAIA,IAAI,KAAGJ,IAA9B,IAAsC,CAAtD;AACAE,MAAAA,KAAK,CAACE,IAAI,CAACI,OAAD,CAAL,CAAL;AACH,KAHK,MAGD;AACDN,MAAAA,KAAK,CAAC,EAAD,CAAL;AACH;AACJ,GAXQ,EAWN,CAACC,QAAD,EAAWH,IAAX,CAXM,CAAT;AAaA,SAAOC,EAAP;AACH;;AAED,eAAeF,KAAf","sourcesContent":["// eslint-disable-next-line\r\nimport React, { useState, useEffect } from 'react';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nfunction useId(page) {\r\n    const [id, setId] = useState(null)\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        const path = location.pathname.split('/')\r\n\r\n        if (path.length === 3){\r\n            setId(path[path.length-1])\r\n        }else if (path.length > 3){\r\n            const idIndex = path.findIndex(path => path===page) + 1\r\n            setId(path[idIndex])\r\n        }else{\r\n            setId('')\r\n        }\r\n    }, [location, page])\r\n\r\n    return id\r\n}\r\n\r\nexport default useId"]},"metadata":{},"sourceType":"module"}