{"ast":null,"code":"import axios from 'axios';\nexport default function makeAxiosRequest(endpoint) {\n  let source = axios.CancelToken.source();\n\n  const makeRequest = async () => {\n    const cancelToken = source.token;\n    const config = {\n      method: 'POST',\n      url: process.env.REACT_APP_BACK_URI,\n      data: {\n        endpoint\n      },\n      withCredentials: true,\n      cancelToken\n    };\n\n    try {\n      var result = await axios(config);\n    } catch (error) {\n      if (axios.isCancel(error)) return;\n      return error;\n    }\n\n    return result.data;\n  };\n\n  return [source, makeRequest];\n}","map":{"version":3,"sources":["E:/React/SP/spotify-clone-client/src/utilities/makeAxiosRequest.js"],"names":["axios","makeAxiosRequest","endpoint","source","CancelToken","makeRequest","cancelToken","token","config","method","url","process","env","REACT_APP_BACK_URI","data","withCredentials","result","error","isCancel"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,QAA1B,EAAmC;AAC9C,MAAIC,MAAM,GAAGH,KAAK,CAACI,WAAN,CAAkBD,MAAlB,EAAb;;AAEA,QAAME,WAAW,GAAG,YAAY;AAC5B,UAAMC,WAAW,GAAGH,MAAM,CAACI,KAA3B;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBAFN;AAGXC,MAAAA,IAAI,EAAE;AAACZ,QAAAA;AAAD,OAHK;AAIXa,MAAAA,eAAe,EAAE,IAJN;AAKXT,MAAAA;AALW,KAAf;;AAOA,QAAG;AACC,UAAIU,MAAM,GAAG,MAAMhB,KAAK,CAACQ,MAAD,CAAxB;AACH,KAFD,CAEC,OAAOS,KAAP,EAAa;AACV,UAAIjB,KAAK,CAACkB,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AAC3B,aAAOA,KAAP;AACH;;AAED,WAAOD,MAAM,CAACF,IAAd;AACH,GAjBD;;AAmBA,SAAO,CAACX,MAAD,EAASE,WAAT,CAAP;AACH","sourcesContent":["import axios from 'axios'\r\n\r\nexport default function makeAxiosRequest(endpoint){\r\n    let source = axios.CancelToken.source()\r\n    \r\n    const makeRequest = async () => {\r\n        const cancelToken = source.token\r\n        const config = {\r\n            method: 'POST',\r\n            url: process.env.REACT_APP_BACK_URI,\r\n            data: {endpoint},\r\n            withCredentials: true,\r\n            cancelToken\r\n        }\r\n        try{\r\n            var result = await axios(config)\r\n        }catch (error){\r\n            if (axios.isCancel(error)) return\r\n            return error\r\n        }\r\n        \r\n        return result.data\r\n    }\r\n    \r\n    return [source, makeRequest]\r\n}\r\n\r\n    \r\n    \r\n"]},"metadata":{},"sourceType":"module"}